// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteSenior.Data.Context;

namespace TesteSenior.Data.Migrations
{
    [DbContext(typeof(TesteSeniorConext))]
    partial class TesteSeniorConextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("testesenior.Domain.DTO.SPRankingCondominio", b =>
                {
                    b.Property<int>("andar")
                        .HasColumnType("int")
                        .HasColumnName("ANDAR");

                    b.Property<int>("codigoApartamento")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_APARTAMENTO");

                    b.Property<int>("codigoEdificio")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_EDIFICIO");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESTADO");

                    b.Property<int>("metragem")
                        .HasColumnType("int")
                        .HasColumnName("METRAGEM");

                    b.Property<string>("nomeCidade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_CIDADE");

                    b.Property<string>("nomeEdificio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_EDIFICIO");

                    b.Property<int>("numeroQuartos")
                        .HasColumnType("int")
                        .HasColumnName("NUMERO_QUARTOS");

                    b.Property<double>("valorPagamento")
                        .HasColumnType("float")
                        .HasColumnName("VALOR_PAGAMENTO");

                    b.ToTable("spRankingCondominio");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaApartamento", b =>
                {
                    b.Property<int>("codigoApartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_APARTAMENTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CODIGO_EDIFICIO")
                        .HasColumnType("int");

                    b.Property<int>("andar")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("ANDAR");

                    b.Property<int>("metragem")
                        .HasMaxLength(400)
                        .HasColumnType("int")
                        .HasColumnName("METRAGEM");

                    b.Property<int>("numeroQuartos")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("NUMERO_QUARTOS");

                    b.HasKey("codigoApartamento");

                    b.HasIndex("CODIGO_EDIFICIO");

                    b.ToTable("TABELA_APARTAMENTO");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaCidade", b =>
                {
                    b.Property<int>("codigoCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_CIDADE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("nomeCidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME_CIDADE");

                    b.HasKey("codigoCidade");

                    b.ToTable("TABELA_CIDADE");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaEdificio", b =>
                {
                    b.Property<int>("codigoEdificio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_EDIFICIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CODIGO_CIDADE")
                        .HasColumnType("int");

                    b.Property<int>("andares")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("ANDARES");

                    b.Property<string>("nomeEdificio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME_EDIFICIO");

                    b.Property<int>("numeroAptoAndar")
                        .HasMaxLength(12)
                        .HasColumnType("int")
                        .HasColumnName("NUMERO__APTO_ANDAR");

                    b.HasKey("codigoEdificio");

                    b.HasIndex("CODIGO_CIDADE");

                    b.ToTable("TABELA_EDIFICIO");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaPagamentosCondominio", b =>
                {
                    b.Property<int>("codigoPagamentoCondominio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODIGO_PAGAMENTOS_CONDOMINIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CODIGO_APARTAMENTO")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_PAGAMENTO");

                    b.Property<double>("valorPagamento")
                        .HasMaxLength(400)
                        .HasColumnType("float")
                        .HasColumnName("VALOR_PAGAMENTO");

                    b.HasKey("codigoPagamentoCondominio");

                    b.HasIndex("CODIGO_APARTAMENTO");

                    b.ToTable("TABELA_PAGAMENTOS_CONDOMINIO");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaApartamento", b =>
                {
                    b.HasOne("testesenior.domain.Entity.TabelaEdificio", "tabelaEdificio")
                        .WithMany("tabelaApartamento")
                        .HasForeignKey("CODIGO_EDIFICIO");

                    b.Navigation("tabelaEdificio");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaEdificio", b =>
                {
                    b.HasOne("testesenior.domain.Entity.TabelaCidade", "tabelaCidade")
                        .WithMany()
                        .HasForeignKey("CODIGO_CIDADE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tabelaCidade");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaPagamentosCondominio", b =>
                {
                    b.HasOne("testesenior.domain.Entity.TabelaApartamento", "tabelaApartamento")
                        .WithMany()
                        .HasForeignKey("CODIGO_APARTAMENTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tabelaApartamento");
                });

            modelBuilder.Entity("testesenior.domain.Entity.TabelaEdificio", b =>
                {
                    b.Navigation("tabelaApartamento");
                });
#pragma warning restore 612, 618
        }
    }
}
